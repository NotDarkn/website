---
import '@fontsource/inter';
import { CssVarsProvider } from '@mui/joy/styles';
import Box from '@mui/joy/Box';
import Alert from '@mui/joy/Alert';
---
<!doctype html>
<html lang="en">
<head>
  <title>Glitz Downloader</title>
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <meta charset="UTF-8" />
  <meta property="og:title" content="Rehosted SH1mmer" />
  <meta property="og:description" content="SH1mmer: Downloader" />
  <meta property="og:url" content="https://osu.bio/sh1mmer/downloader" />
  <meta property="og:type" content="website" />
  <meta property="og:image" content="https://osu.bio/img/file.png" />
  <meta property="og:image:alt" content="SH1mmer" />
  <meta property="og:image:width" content="512" />
  <meta property="og:image:height" content="512" />
  <meta property="og:site_name" content="osu.bio" />
  <link rel="icon" href="/img/file.png" />

  <script is:inline>
  
    async function start() {
      if (!("showSaveFilePicker" in window)) {
        const compatAlert = document.querySelector("#compatAlert");
        compatAlert.style.display = "initial";
      }

      data = await (await fetch("data.json")).json();

      const select = document.querySelector("#mirror");
      for (let mirror in data) {
        let opt = new Option(mirror);
        select.appendChild(opt);
      }
      const file = document.querySelector("#file");
      let children = [];
      select.addEventListener("change", () => {
        for (let child of children) {
          child.remove();
        }
        children = [];

        for (let name in data[select.value]) {
          let opt = new Option(name);
          file.appendChild(opt);
          children.push(opt);
        }
      });

      const download = document.querySelector("#download");

      const progress = document.querySelector("#progress");

      download.addEventListener("click", async () => {
        let urls = data[select.value][file.value];

        if (typeof urls === "object") {
          let ws_dest = await window
            .showSaveFilePicker()
            .then((handle) => handle.createWritable());
          window.wsd = ws_dest;

          try {
            for (let i in urls) {
              let url = urls[i];
              let req = await fetch(url);
              if (req.status != 200) {
                const defectiveMirrorAlert = document.querySelector("#defectiveMirrorAlert");
                defectiveMirrorAlert.style.display = "initial";
                await sleep(7000);
                window.location.reload();
              }
              await req.body.pipeTo(ws_dest, { preventClose: true });
              progress.style.display = "";
              progress.innerText = `Progress: ${Math.floor(
                (i / urls.length) * 100,
              )}%`;
            }
          } catch {
            const corsAlert = document.querySelector("#corsAlert");
            corsAlert.style.display = "initial";
            await sleep(20000);
            window.location.reload();
          }

          console.log("done!");

          progress.innerText = `Progress: Done!`;
          ws_dest.close();
        } else if (urls) {
          window.open(urls);
        }
      });

      const mirror = document.querySelector("#mirror");
      const filee = document.querySelector("#file");
      const downloadd = document.querySelector("#download");

      mirror.addEventListener("change", () => {
        filee.style.display = "initial";
      });

      filee.addEventListener("change", () => {
        downloadd.style.display = "initial";
      });

    }
    function sleep(ms) {
     return new Promise((resolve) => {
        setTimeout(resolve, ms);
      });
}
  </script>
</head>
<CssVarsProvider defaultMode="dark">
<body onload="
  start()
  ">
  <Box
  sx={{
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    flexDirection: 'column',
    width: '100%',
  }}>
<Alert id="compatAlert" sx={{display: 'none'}} color="danger" variant="outlined" size='lg'>warning! You won't be able to download from the Discord mirror using this browser or device!</Alert>
<br />
<Alert id="corsAlert" sx={{display: 'none'}} color="danger" variant="outlined" size='lg'>CORS error! Please enable the CORS disabler extension. If you don't have one for your browser, switch to Chrome, install the extension, and try again. This webpage will reload in 20 seconds.</Alert>
<br />
<Alert id="defectiveMirrorAlert" sx={{display: 'none'}} color="danger" variant="outlined" size='lg'> The chosen mirror is defective. Choose another when reloaded! This webpage will reload in 7 seconds.</Alert>
</Box>
  <h1>Glitz - RMA Shim Downloader</h1>
  <p>
    Glitz is a collection of mirrors for publicly-available RMA shims that can
    be used with <a href="https://sh1mmer.me">SH1mmer</a>.<br />
    As of currently, Glitz provides five different mirrors to download shims
    from.<br />
  </p>
  <p>
    <b>Discord Download Instructions:</b>
    <br />
    1. Install
    <a href="https://chrome.google.com/webstore/detail/allow-cors-access-control/lhobafahddgcelffkeicbaginigeejlf">this
      extension</a>, (or an equivalent)
    <br />
    2. Open the extension, and click the big "C" on the left to enable it.
    <br />
    3. Download your bin from the Discord mirror, and uninstall the extension
    after.
  </p>

  <select style="margin-right: 4px;" id="mirror">
    <option>select a mirror</option>
  </select>

  <select id="file" style="margin-left: 5px; display: none;">
    <option>select a board</option>
  </select>

  <button id="download" style="margin-left: 9px; display: none;">download</button>

  <h3 style="display: none" id="progress"></h3>

  <br />

  <div class="float">
    <h3>
      In order to use these RMA shims to un-enroll your Chromebook, you will
      need to inject SH1mmer <a href="/sh1mmer/builder">here</a>.
      <br />
      These files aren't endorsed, created, provided, nor officially supported
      by <a href="https://mercurywork.shop">Mercury Workshop</a>.
    </h3>
  </div>

  <h3>
    <a href="https://discord.gg/bAgNyGpXSx">discord</a> •
    <a href="https://osu.bio">website</a> •
    <a href="https://github.com/NotDarkn/website">github</a>
  </h3>

  <p>
    <b>credits:</b>
    <br />
    dl.osu.bio & hosted & edited by
    <a href="https://discord.com/users/829745505784692776">@notdarkn</a><br />
    dl.diffusehyperion.me by
    <a href="https://discord.com/users/301279262994857987">@diffusehyperion</a><br />
    kxtz.femboy.vip by
    <a href="https://discord.com/users/952792525637312552">@kxtzownsu</a><br />
    originally created by
    <a href="https://discord.com/users/1039648022084202516">@julia_j</a><br />
    <br />
    ❤️ thank you ❤️
  </p>
</body>
</CssVarsProvider>
<style>
  @import url("https://osu.bio/css/fonts.css");

  * {
    text-align: center;
  }

  marquee {
    text-align: initial !important;
  }

  a[href] {
    color: #2e8ff9;
  }

  p,
  h2 {
    font-family: "SF-Reg";
  }

  .float {
    animation:
      MoveUpDown 1s ease-in-out infinite,
      MoveLeft 3.72s ease-in-out infinite;
    position: relative;
    left: 0;
    bottom: 0;
  }

  @keyframes MoveUpDown {

    0%,
    100% {
      bottom: -8px;
    }

    50% {
      bottom: 8px;
    }
  }

  @keyframes MoveLeft {

    0%,
    100% {
      left: -8px;
    }

    50% {
      left: 8px;
    }
  }

  body,
  html {
    --lightness: 40%;
    background-color: #131516;
    color: #e3e1de;
  }

  select,
  button {
    background-color: #e3e1de;
    border-color: #5a5a5a;
    border-radius: 4px;
  }
</style>

</html>